#*In the name of Allah*#

#ifndef __ABSTRACT_TIMED_ACTOR_H_
\#define __ABSTRACT_TIMED_ACTOR_H_

\#include "AbstractActor.h"
\#include <list>
\#include <stdio.h>
\#include <string.h>
\#include <limits>
\#include "OrderSpec.h"

using namespace std;

\#define typedSwap(x,y,type) { type __tempvar = x; x = y; y = __tempvar; }

#applyPatch($patches 'AdditionalDeclarations' '')

class AbstractTimedActor : virtual public AbstractActor {

public:

    AbstractTimedActor(byte myID, char *myName, int maxQueueLength, int maxParamQueueLength, vector<AbstractActor*>& rebecsRef
		#ifdef DEBUG_LEVEL_2 
			, ostream &out
		#[[#endif]]#
    	#applyPatch($patches 'AdditionalInitializationParameters' true)
    );
    virtual ~AbstractTimedActor();
    virtual void setNow(TIME_TYPE now);
    TIME_TYPE getNow();

    #ifdef TTS
        int __pc;
        TIME_TYPE __res;
    #[[#endif]]#
    
    #if ($priorityType == "global")
    	virtual int getPriority();
    #end
    

    TIME_TYPE* executionTime;
    TIME_TYPE* deadline;
    TIME_TYPE* delay;
    TIME_TYPE _ref_now;
    
    void preMessageExecutionInitialization();
    TIME_TYPE _ref_currentMessageArrival, _ref_currentMessageDeadline, _ref_currentMessageWaitingTime, _ref_currentMessageDelay;

	virtual void exportStateInXML(ostream &out, string tab);
	virtual void exportQueueContentInXML(ostream &out, string tab);
    void addOrderSpecs(AbstarctOrderSpec* orderSpec);
    bool checkAlternatives(int a, int b);
    void setMailBox();
    bool isMailBoxSet();
    int getExecutableMessageId();
    
protected:
	void addTimedBundles(byte senderId, TIME_TYPE executionTime, TIME_TYPE deadline, TIME_TYPE delay);

    void timeEnqueue(TIME_TYPE *queue, TIME_TYPE value);
    virtual void applyPolicy(boolean isSendToSelf);
    
    void startTimer(Timer &t);
    void stopTimer(Timer &t);
    TIME_TYPE getTimerValue(Timer &t);
    vector<AbstarctOrderSpec*> orderSpecs;
    bool applyMailBoxPolicy(int cnt, int executableId);
    int currentDelay;
    bool mailBoxStatus;

    #applyPatch($patches 'AdditionalSignatures' '')

};

#[[#endif]]#